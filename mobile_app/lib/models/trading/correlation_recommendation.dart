import 'package:equatable/equatable.dart';

/// A recommendation based on correlation analysis between multiple trading instruments.
/// 
/// These recommendations are generated by the MultiAssetIntegrator component
/// in the backend and provide insights into which instruments can be traded
/// together based on their correlation patterns.
class CorrelationRecommendation extends Equatable {
  /// The reason for this recommendation
  final String reason;
  
  /// Symbols involved in this recommendation
  final List<String> symbols;
  
  /// The average correlation between the symbols
  final double averageCorrelation;
  
  /// Recommended position sizing factor to adjust for correlation risk
  final double positionSizeFactor;

  const CorrelationRecommendation({
    required this.reason,
    required this.symbols,
    required this.averageCorrelation,
    required this.positionSizeFactor,
  });

  factory CorrelationRecommendation.fromJson(Map<String, dynamic> json) {
    return CorrelationRecommendation(
      reason: json['reason'] ?? '',
      symbols: (json['symbols'] as List?)?.map((e) => e.toString()).toList() ?? [],
      averageCorrelation: json['average_correlation']?.toDouble() ?? 0.0,
      positionSizeFactor: json['position_size_factor']?.toDouble() ?? 1.0,
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'reason': reason,
      'symbols': symbols,
      'average_correlation': averageCorrelation,
      'position_size_factor': positionSizeFactor,
    };
  }

  @override
  List<Object?> get props => [reason, symbols, averageCorrelation, positionSizeFactor];
}
